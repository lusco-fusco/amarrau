version: '3.3'
services:
  app:
    build:
      context: .
    environment:
      - CSRF_ENABLED=$CSRF_ENABLED
      - DEBUG=$DEBUG
      - HOST=$HOST
      - PORT=$PORT
      - SQLALCHEMY_ECHO=$SQLALCHEMY_ECHO
      - MIGRATION_PATH=$MIGRATION_PATH
      - TRACK_MODIFICATIONS=$TRACK_MODIFICATIONS
      - DATABASE_NAME=$DATABASE_NAME
      - DATABASE_PORT=$DATABASE_PORT
      - DATABASE_HOST=$DATABASE_HOST
      - DATABASE_PASSWORD=$DATABASE_PASSWORD
      - DATABASE_USER=$DATABASE_USER
      - JWT_SECRET_KEY=$JWT_SECRET_KEY
      - MAIL_USERNAME=$MAIL_USERNAME
      - MAIL_PASSWORD=$MAIL_PASSWORD
      - MAIL_SERVER=$MAIL_SERVER
      - MAIL_PORT=$MAIL_PORT
      - MAIL_USE_SSL=$MAIL_USE_SSL
      - REDIS_PORT=$REDIS_PORT
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - SCOUTER_HOST=$SCOUTER_HOST
      - SCOUTER_PORT=$SCOUTER_PORT
      - SCOUTER_X_API_KEY=$SCOUTER_X_API_KEY
    ports:
      - $BACKEND_COMPUTER_PORT:$PORT
    restart: always
    volumes:
      - migration-volume:$MIGRATION_PATH
  db:
    image: postgres:latest
    ports:
      - $DATABASE_COMPUTER_PORT:$DATABASE_PORT
    environment:
        - POSTGRES_PASSWORD=$DATABASE_PASSWORD
        - POSTGRES_USER=$DATABASE_USER
        - POSTGRES_DB=$DATABASE_NAME
    restart: always
    volumes:
      - data-volume:/var/lib/mysql
  redis:
    image: redis:latest
    command: redis-server --requirepass $REDIS_PASSWORD
    ports:
      - $REDIS_COMPUTER_PORT:$REDIS_PORT
    restart: always
volumes:
  data-volume:
  migration-volume:
